name: main

on:
  push:
    branches:
      - 'goreleaser'
    tags:
      - 'v*'
  pull_request:

jobs:
# linters
  # lint-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'
  #     - run: make lint-frontend
  # lint-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.20.1
  #     - run: make lint-backend
  # lint-commits:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'
  #     - run: make lint-commits
  # lint:
  #   runs-on: ubuntu-latest
  #   needs: [lint-frontend, lint-backend, lint-commits]
  #   steps:
  #     - run: echo "done"

# tests
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: make test-frontend
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: 1.20.1
      - run: make test-backend
  test:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    steps:
      - run: echo "done"

# release
  release:
    runs-on: ubuntu-latest
    # needs: [lint, test]
    needs: [test]
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: 1.20.1
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build frontend
        run: make build-frontend
      - name: Login to Huwei SWR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOMESTIC_DOCKER_SERVER }}
          username: ${{ secrets.DOMESTIC_DOCKER_USERNAME }}
          password: ${{ secrets.DOMESTIC_DOCKER_PASSWORD }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}